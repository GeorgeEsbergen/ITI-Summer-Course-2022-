{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset178 GeezaPro;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 void main() \{\
  \
  /// Section 1:\
  var firstName = "Mohammed"; //type inference\
  String lastName = "Ali";\
  \
  //String variables can be easily added to each others\
  print(firstName + " " + lastName);\
  \
  //single,double and multiline strings\
  var singleQuoteString = 'this is a single quote string' ; \
  var doubleQuoteString = "this is a single quote string" ; \
    var multiLineQuoteString = '''this \
                                   is\
                                    a multi line string''' ; \
  \
  print(singleQuoteString);\
  print(doubleQuoteString);\
  print(multiLineQuoteString);\
  \
  \
  \
  //String interpolation\
  print("My first name is $firstName and my last name is $lastName");\
  \
  //String parsing\
  \
      //int from String\
  var firstString = "789";\
  var parsedFirstString = int.parse(firstString);\
  print(parsedFirstString);\
      //double from String\
  var secondString = "555.45";\
  var parsedSecondString = double.parse(secondString);\
  print(parsedSecondString);\
  \
  \
  // Constant values\
\
  const int fixedNum  = 123;\
  const String fixedStr = "test String";\
  \
  /// Section 2: nullable variables\
  \
  // for optional values (nullable) use ? after variable type\
  String? myAge = "29";\
  //boolean values only accept true or false , or true ,false or null in nullable version of it\
  bool canSubmitForm = false;\
  \
  \
  \
  \
  \
  /// Section 3: Collections\
  \
  var numbers = [1,2,3,4,5,6,7,8,9,10];\
  List<int> numbers2 = [1,2,3,4,5,6,7,8,9,10];\
  \
  print(numbers);\
  print(numbers.first);\
  print(numbers.last);\
  print(numbers.isEmpty);\
  print(numbers.isNotEmpty);\
  numbers.add(11);\
  print(numbers);\
  \
  var uniqueNumbers = \{1,2,3,4,5,5,6,7,8,9,10\};\
  print(uniqueNumbers);\
  Map<String,bool> maritalStatus = \{"isMarried":false\};\
  \
  \
  \
  int? var1;\
  int? var2;\
  \
  // if i am null please assign me to =>\
  print(var1 ??= 5 );\
  print(var1 ?? 12 );\
  \
  // if i am null please assume my value is =>\
  print(var2 ?? 5 );\
  print(var2 ?? 12 );\
  \
  \
/// Section 4: operators\
    //relation ==,!=, >=, <=\
    // +=, -=, *=, %=\
    // ++number, number++\
   // if(number > 5 && number <100) \{\
   // print("number is bigger than 5 and smaller than 100");\
   //    \}\
  \
  /// Section 5: tertinary operators\
  \
  var studentResult = 42;\
  \
  String finalEval = studentResult > 51 ? "Passed" : "Failed" ;\
  print(finalEval);\
  \
  /// Section 5: Conditions , Switch statments\
  \
  var a1 = 24;\
    \
    if(a1 > 10 )\{\
      print("a1 is bigger than 10");\
    \}else \{\
      print("a1 is smaller than 10");\
    \}\
  \
  switch (a1) \{\
    case 0 :\
      print("a1 is zero");\
  \
  \}\
  \
  /// Section 6: loops\
  \
   //C style for loop\
  \
//   for(var x = 0; x < 10 ; x++ )\{\
//     print(x);\
//   \}\
  \
 \
//   for(var num in numbers ) \{\
//     print("the current number in this iteration is $num");\
//   \}\
  \
//   numbers.forEach((num)\{\
//     print("the current number is $num");\
//   \});\
  \
  /// and so on While loop, do..while\
  \
  \
  /// Section 6: Function\
  \
  void printMyName(String name) \{\
    print("my name is $name");\
  \}\
  printMyName("Ali");\
  \
//   @required now it is called required\
  void printMyProfession(\{required String prof\}) \{\
    print("my profession is $prof");\
  \}\
  \
  \
  printMyProfession(prof:"Doctor");\
  \
  \
  \
\}\
\
\
\
\
void main()\{\
\
  \
//before null safety flutter version < 2\
  //Positional arguments\
        //Required Positional Arguments\
        //optional Positional Arguments\
//           
\f1 \'e3\'e3\'df\'e4
\f0  
\f1 \'ca\'ca\'c8\'da\'ca
\f0  
\f1 \'c7\'e6
\f0  
\f1 \'ed\'ca\'e3
\f0  
\f1 \'ca\'cc\'c7\'e5\'e1\'e5\'c7
\f0  
\f1 \'e6\'e1\'df\'e4
\f0  
\f1 \'ed\'d4\'ca\'d1\'d8
\f0  
\f1 \'dd\'ed\'e5\'c7
\f0  
\f1 \'c7\'e1\'ca\'d1\'ca\'ed\'c8
\f0  
\f1 \'e1\'e6
\f0  
\f1 \'c7\'ca\'c8\'da\'ca\'ca
\f0 \
        // it has a unique position\
        \
  //          
\f1 \'e5\'ed\'c7
\f0  
\f1 \'e3\'e3\'ed\'d2\'c9
\f0  
\f1 \'c8\'e3\'e6\'de\'da\'e5\'c7
\f0  
\f1 \'e6\'ca\'d1\'ca\'ed\'c8\'e5\'c7
\f0  
\f1 \'e3\'d4
\f0  
\f1 \'c8\'c5\'d3\'e3\'e5\'c7
\f0 \
//   void printData(String name,[int age = 24,String gender = "Not yet Provided"])\{\
//     print("My name is $\{name.toUpperCase() \},i am $age years old and my gender is $gender");\
//   \}\
  \
//   void printData(String name,int age ,String gender)\{\
//     print("My name is $\{name.toUpperCase() \},i am $age years old and my gender is $gender");\
//   \}\
  \
  \
  //Optional Named Params\
  \
    void printData(String name,\{required int age ,String gender = "Not yet Provided"\})\{\
    print("My name is $\{name.toUpperCase() \},i am $age years old and my gender is $gender");\
  \}\
  \
  \
  printData("Mohammed",age:24,gender:"Male");\
  //Required Positional Arguments\
  //Optional  Positional Arguments\
  //Named Optional  Arguments\
  //Named  Required  Arguments\
  \
\}\
\
\
\
\
\
\
\
\
\
\
}